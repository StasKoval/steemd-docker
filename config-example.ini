# Endpoint for P2P node to listen on
# p2p-endpoint = 

# P2P nodes to connect to on startup (may specify multiple times)
seed-node = 52.26.78.244:2001
#seed-node = 
#seed-node = 

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
# rpc-endpoint = 

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint = 

# The TLS certificate file for this server
# server-pem = 

# Password for this certificate
# server-pem-password = 

# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key = 

# JSON file specifying API permissions
# api-access = 

# Enable block production, even if the chain is stale.
enable-stale-production = false

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

# name of witness controlled by this node (e.g. initwitness )
witness = "accountname1"
witness = "accountname2"


# name of miner and its private key (e.g. ["account","WIF PRIVATE KEY"] )
miner = ["accountname1","WIFPRIVATEKEY1"]
miner = ["accountname2","WIFPRIVATEKEY2"]

# Number of threads to use for proof of work mining
mining-threads = 1

# WIF PRIVATE KEY to be used by one or more witnesses or miners
# private-key = 

# Defines a range of accounts to track as a json pair ["from","to"] [from,to)
# track-account-range = 

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log
# filename can be absolute or relative to this config file

# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=warn
appenders=stderr

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
level=warn
appenders=p2p

